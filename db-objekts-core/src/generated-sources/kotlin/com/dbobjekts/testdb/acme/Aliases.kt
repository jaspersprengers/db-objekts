package com.dbobjekts.testdb.acme
import com.dbobjekts.testdb.acme.core.Address
import com.dbobjekts.testdb.acme.core.AllTypes
import com.dbobjekts.testdb.acme.core.Country
import com.dbobjekts.testdb.acme.core.Department
import com.dbobjekts.testdb.acme.core.Employee
import com.dbobjekts.testdb.acme.core.EmployeeAddress
import com.dbobjekts.testdb.acme.core.EmployeeDepartment
import com.dbobjekts.testdb.acme.hr.Certificate
import com.dbobjekts.testdb.acme.hr.Hobby
import com.dbobjekts.testdb.acme.library.Author
import com.dbobjekts.testdb.acme.library.Book
import com.dbobjekts.testdb.acme.library.BookReview
import com.dbobjekts.testdb.acme.library.Composite
import com.dbobjekts.testdb.acme.library.CompositeForeignKey
import com.dbobjekts.testdb.acme.library.Item
import com.dbobjekts.testdb.acme.library.Loan
import com.dbobjekts.testdb.acme.library.Member

/**  
 * Auto-generated metadata object. Provides a list of unique aliases for each table across all schemas in the catalog. These are used in the SQL that db-Objekts generates.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * You can import the individual values of in this object in your code to use them as convenient shortcuts.
 *
 * ```
 * import com.dbobjekts.testdb.acme.Aliases.e
 * [...]
 * transaction.select(e.name)
 *```
 */        
object Aliases : HasAliases {
    override val a = Address
    override val at = AllTypes
    override val c = Country
    override val d = Department
    override val e = Employee
    override val ea = EmployeeAddress
    override val ed = EmployeeDepartment
    override val c1 = Certificate
    override val h = Hobby
    override val a1 = Author
    override val b = Book
    override val br = BookReview
    override val c2 = Composite
    override val cfk = CompositeForeignKey
    override val i = Item
    override val l = Loan
    override val m = Member
}

/**  
 * Auto-generated metadata object. Interface for a list of unique aliases for each table across all schemas in the catalog.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * Any class can extends this interface and delegate to the Aliases object. This imports all the shortcuts without the need for separate manual import statements 
 *
 * ```
 * import com.dbobjekts.testdb.acme.Aliases
 * import com.dbobjekts.testdb.acme.HasAliases
 * [...]
 * class AcmeDbInteractions : HasAliases by Aliases {
 *  transaction.select(e.name, a.id, ea.kind)
 * }
 *```
 */ 
interface HasAliases {
    val a : Address
    val at : AllTypes
    val c : Country
    val d : Department
    val e : Employee
    val ea : EmployeeAddress
    val ed : EmployeeDepartment
    val c1 : Certificate
    val h : Hobby
    val a1 : Author
    val b : Book
    val br : BookReview
    val c2 : Composite
    val cfk : CompositeForeignKey
    val i : Item
    val l : Loan
    val m : Member
}
     