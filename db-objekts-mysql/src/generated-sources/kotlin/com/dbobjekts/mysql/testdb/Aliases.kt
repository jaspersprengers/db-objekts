package com.dbobjekts.mysql.testdb
import com.dbobjekts.mysql.testdb.classicmodels.Customers
import com.dbobjekts.mysql.testdb.classicmodels.Employees
import com.dbobjekts.mysql.testdb.classicmodels.Offices
import com.dbobjekts.mysql.testdb.classicmodels.Orderdetails
import com.dbobjekts.mysql.testdb.classicmodels.Orders
import com.dbobjekts.mysql.testdb.classicmodels.Payments
import com.dbobjekts.mysql.testdb.classicmodels.Productlines
import com.dbobjekts.mysql.testdb.classicmodels.Products
import com.dbobjekts.mysql.testdb.core.Address
import com.dbobjekts.mysql.testdb.core.AllTypesNil
import com.dbobjekts.mysql.testdb.core.Country
import com.dbobjekts.mysql.testdb.core.Department
import com.dbobjekts.mysql.testdb.core.Employee
import com.dbobjekts.mysql.testdb.core.EmployeeAddress
import com.dbobjekts.mysql.testdb.core.EmployeeDepartment
import com.dbobjekts.mysql.testdb.hr.Certificate
import com.dbobjekts.mysql.testdb.hr.Hobby

/**  
 * Auto-generated metadata object. Provides a list of unique aliases for each table across all schemas in the catalog. These are used in the SQL that db-Objekts generates.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * You can import the individual values of in this object in your code to use them as convenient shortcuts.
 *
 * ```
 * import com.dbobjekts.mysql.testdb.Aliases.e
 * [...]
 * transaction.select(e.name)
 *```
 */        
object Aliases : HasAliases {
    override val cu = Customers
    override val em = Employees
    override val of = Offices
    override val or = Orderdetails
    override val or1 = Orders
    override val pa = Payments
    override val pr = Productlines
    override val pr1 = Products
    override val ad = Address
    override val atn = AllTypesNil
    override val co = Country
    override val de = Department
    override val em1 = Employee
    override val ea = EmployeeAddress
    override val ed = EmployeeDepartment
    override val ce = Certificate
    override val ho = Hobby
}

/**  
 * Auto-generated metadata object. Interface for a list of unique aliases for each table across all schemas in the catalog.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * Any class can extends this interface and delegate to the Aliases object. This imports all the shortcuts without the need for separate manual import statements 
 *
 * ```
 * import com.dbobjekts.mysql.testdb.Aliases
 * import com.dbobjekts.mysql.testdb.HasAliases
 * [...]
 * class AcmeDbInteractions : HasAliases by Aliases {
 *  transaction.select(e.name, a.id, ea.kind)
 * }
 *```
 */ 
interface HasAliases {
    val cu : Customers
    val em : Employees
    val of : Offices
    val or : Orderdetails
    val or1 : Orders
    val pa : Payments
    val pr : Productlines
    val pr1 : Products
    val ad : Address
    val atn : AllTypesNil
    val co : Country
    val de : Department
    val em1 : Employee
    val ea : EmployeeAddress
    val ed : EmployeeDepartment
    val ce : Certificate
    val ho : Hobby
}
     