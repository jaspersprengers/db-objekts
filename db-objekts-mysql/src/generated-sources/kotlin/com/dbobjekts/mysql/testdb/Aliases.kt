package com.dbobjekts.mysql.testdb
import com.dbobjekts.mysql.testdb.classicmodels.Customers
import com.dbobjekts.mysql.testdb.classicmodels.Employees
import com.dbobjekts.mysql.testdb.classicmodels.Offices
import com.dbobjekts.mysql.testdb.classicmodels.Orderdetails
import com.dbobjekts.mysql.testdb.classicmodels.Orders
import com.dbobjekts.mysql.testdb.classicmodels.Payments
import com.dbobjekts.mysql.testdb.classicmodels.Productlines
import com.dbobjekts.mysql.testdb.classicmodels.Products
import com.dbobjekts.mysql.testdb.core.Address
import com.dbobjekts.mysql.testdb.core.AllTypesNil
import com.dbobjekts.mysql.testdb.core.Country
import com.dbobjekts.mysql.testdb.core.Department
import com.dbobjekts.mysql.testdb.core.Employee
import com.dbobjekts.mysql.testdb.core.EmployeeAddress
import com.dbobjekts.mysql.testdb.core.EmployeeDepartment
import com.dbobjekts.mysql.testdb.hr.Certificate
import com.dbobjekts.mysql.testdb.hr.Hobby

/**  
 * Auto-generated metadata object. Provides a list of unique aliases for each table across all schemas in the catalog. These are used in the SQL that db-Objekts generates.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * You can import the individual values of in this object in your code to use them as convenient shortcuts.
 *
 * ```
 * import com.dbobjekts.mysql.testdb.Aliases.e
 * [...]
 * transaction.select(e.name)
 *```
 */        
object Aliases : HasAliases {
    override val c = Customers
    override val e = Employees
    override val o = Offices
    override val o1 = Orderdetails
    override val o2 = Orders
    override val p = Payments
    override val p1 = Productlines
    override val p2 = Products
    override val a = Address
    override val atn = AllTypesNil
    override val c1 = Country
    override val d = Department
    override val e1 = Employee
    override val ea = EmployeeAddress
    override val ed = EmployeeDepartment
    override val c2 = Certificate
    override val h = Hobby
}

/**  
 * Auto-generated metadata object. Interface for a list of unique aliases for each table across all schemas in the catalog.
 *
 * Do not edit this file manually! Always use [com.dbobjekts.codegen.CodeGenerator] when the metadata model is no longer in sync with the database.
 *
 * Any class can extends this interface and delegate to the Aliases object. This imports all the shortcuts without the need for separate manual import statements 
 *
 * ```
 * import com.dbobjekts.mysql.testdb.Aliases
 * import com.dbobjekts.mysql.testdb.HasAliases
 * [...]
 * class AcmeDbInteractions : HasAliases by Aliases {
 *  transaction.select(e.name, a.id, ea.kind)
 * }
 *```
 */ 
interface HasAliases {
    val c : Customers
    val e : Employees
    val o : Offices
    val o1 : Orderdetails
    val o2 : Orders
    val p : Payments
    val p1 : Productlines
    val p2 : Products
    val a : Address
    val atn : AllTypesNil
    val c1 : Country
    val d : Department
    val e1 : Employee
    val ea : EmployeeAddress
    val ed : EmployeeDepartment
    val c2 : Certificate
    val h : Hobby
}
     